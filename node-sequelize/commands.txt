run : 
node filename.js

global object : window

local install:
npm install <package-name>

global install:
npm install -g <package-name>

update package:
npm update <package-name>

uninstall package:
npm uninstall <package-name>

for package.json:
npm init 
or
npm init -y : to auto generate

npm i express

npm cache clean --force

npm i nodemon

after nodemon, run:
nodemon app.js

set ""start": "nodemon app.js"" in package.json, ans run:
npm start

npm i sequelize mysql2 body-parser jsonwebtoken bcrypt

token: 
( header: {"alg":"HS256","typ":"JWT"} )
eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.
( payload : data )
eyJlbWFpbCI6ImhAZ21haWwuY29tIiwiaWQiOjEsImlhdCI6MTYxMzYzNzExMCwibmJmIjoxNjEzNjk3MTEwLCJleHAiOjE2MTQyMzcxMTAsImF1ZCI6InNpdGUtdXNlcnMifQ.
( signature : header.payload.signature )
o1KFAmsBqvcRsrOq7uWbuF4wtV48OpVjMF-JSe1YjzQ

-> to use 'RS256' algo, we need to attach file.


npm i sequelize-cli 

npx sequelize --help //to see all the sequelize command

npx sequelize init // it will generate config, migrations, seeder, models folders

npx sequelize init:config // it will generate config folder, it's for configuration like database connection, jwt middleware, etc...

npx sequelize init:migrations // it will generate migrations folder, it's for table's structure or schema

npx sequelize init:models // it will generate models folder, it's for crud operation

npx sequelize init:seeders // it will generate seeders folder

-> to create database: edit config.json
npx sequelize db:create

-> to drop database
npx sequelize db:drop

-> to generate a model file and  migration file 
npx sequelize model:generate --name ModelName --attributes name:string,description:string,amount:integer OR
npx sequelize model:generate --name=ModelName --attributes=name:string,description:string,amount:integer

-> to save changes done in migration file: it will also add one table called 'sequelizemeta' which tracks all the migrations and save into the table
npx sequelize db:migrate

-> to delete table, to revert the latest migration
npx sequelize db:migrate:undo

-> to delete all tables, to revert all migrations
npx sequelize db:migrate:undo:all 

-> to get back all migrations
npx sequelize db:migrate

-> to see migration status
npx sequelize db:migrate:status

-> to insert the data, we need seeder file, we can insert the data in any table using seeder file
npx sequelize seed:generate --name test-stuff

-> run all seeder file
npx sequelize db:seed:all

-> run specific seeder
npx sequelize db:seed --seed seederFileName

-> to delete all the data from all table either it's entered by seed files or manually
npx sequelize db:seed:undo:all

-> to delete all the data from a specific table
npx sequelize db:seed:undo --seed seederFileName


-> faker package
npm i faker
















